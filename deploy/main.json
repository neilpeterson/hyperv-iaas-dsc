{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "1990248058411265165"
    }
  },
  "parameters": {
    "adminUserName": {
      "type": "string"
    },
    "adminPassword": {
      "type": "secureString"
    },
    "domainName": {
      "type": "string",
      "defaultValue": "contoso.com"
    },
    "resourceGroupNamePrefix": {
      "type": "string"
    },
    "deploySharedResources": {
      "type": "bool",
      "defaultValue": true
    }
  },
  "functions": [],
  "resources": [
    {
      "condition": "[parameters('deploySharedResources')]",
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}-automation-central', parameters('resourceGroupNamePrefix'))]",
      "location": "eastus"
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}-moc-factory', parameters('resourceGroupNamePrefix'))]",
      "location": "eastus"
    },
    {
      "condition": "[parameters('deploySharedResources')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "automationCentral",
      "resourceGroup": "[format('{0}-automation-central', parameters('resourceGroupNamePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminUserName": {
            "value": "[parameters('adminUserName')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "14410080709340913651"
            }
          },
          "parameters": {
            "adminPassword": {
              "type": "secureString"
            },
            "adminUserName": {
              "type": "string"
            },
            "automationAccountName": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().id)]"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "defaultValue": "[uniqueString(subscription().subscriptionId, resourceGroup().id)]"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-08-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "Free"
                }
              }
            },
            {
              "type": "Microsoft.Automation/automationAccounts",
              "apiVersion": "2020-01-13-preview",
              "name": "[parameters('automationAccountName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "Basic"
                }
              }
            },
            {
              "type": "Microsoft.Automation/automationAccounts/credentials",
              "apiVersion": "2020-01-13-preview",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), 'Admincreds')]",
              "properties": {
                "description": "Admin credentials.",
                "password": "[parameters('adminPassword')]",
                "userName": "[parameters('adminUserName')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/modules",
              "apiVersion": "2020-01-13-preview",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), 'StorageDsc')]",
              "location": "[parameters('location')]",
              "properties": {
                "contentLink": {
                  "uri": "https://www.powershellgallery.com/api/v2/package/StorageDsc/5.0.1",
                  "version": "5.0.1"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/modules",
              "apiVersion": "2020-01-13-preview",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), 'ActiveDirectoryDsc')]",
              "location": "eastus",
              "properties": {
                "contentLink": {
                  "uri": "https://www.powershellgallery.com/api/v2/package/ActiveDirectoryDsc/6.0.1",
                  "version": "6.0.1"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/modules",
              "apiVersion": "2020-01-13-preview",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), 'xActiveDirectory')]",
              "location": "[parameters('location')]",
              "properties": {
                "contentLink": {
                  "uri": "https://www.powershellgallery.com/api/v2/package/xActiveDirectory/3.0.0.0",
                  "version": "3.0.0.0"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/modules",
              "apiVersion": "2020-01-13-preview",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), 'xNetworking')]",
              "location": "[parameters('location')]",
              "properties": {
                "contentLink": {
                  "uri": "https://www.powershellgallery.com/api/v2/package/xNetworking/5.7.0.0",
                  "version": "5.7.0.0"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/modules",
              "apiVersion": "2020-01-13-preview",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), 'xPendingReboot')]",
              "location": "[parameters('location')]",
              "properties": {
                "contentLink": {
                  "uri": "https://www.powershellgallery.com/api/v2/package/xPendingReboot/0.4.0.0",
                  "version": "0.4.0.0"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/modules",
              "apiVersion": "2020-01-13-preview",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), 'xHyper-V')]",
              "location": "[parameters('location')]",
              "properties": {
                "contentLink": {
                  "uri": "https://www.powershellgallery.com/api/v2/package/xHyper-V/3.17.0.0",
                  "version": "3.17.0.0"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/modules",
              "apiVersion": "2020-01-13-preview",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), 'xComputerManagement')]",
              "location": "[parameters('location')]",
              "properties": {
                "contentLink": {
                  "uri": "https://www.powershellgallery.com/api/v2/package/xComputerManagement/4.1.0",
                  "version": "3.0.0.0"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "automationAccountKey": {
              "type": "string",
              "value": "[listKeys(resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName')), '2019-06-01').Keys[0].value]"
            },
            "automationAccountName": {
              "type": "string",
              "value": "[parameters('automationAccountName')]"
            },
            "autoamtionAccountURL": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))).registrationUrl]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-automation-central', parameters('resourceGroupNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "network",
      "resourceGroup": "[format('{0}-moc-factory', parameters('resourceGroupNamePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "13690343157057358812"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "bastionHost": {
              "type": "object",
              "defaultValue": {
                "name": "AzureBastionHost",
                "publicIPAddressName": "pip-bastion",
                "subnetName": "AzureBastionSubnet",
                "nsgName": "nsg-hub-bastion",
                "subnetPrefix": "10.0.1.0/29"
              }
            },
            "hubNetwork": {
              "type": "object",
              "defaultValue": {
                "name": "vnet-hub",
                "addressPrefix": "10.0.0.0/20"
              }
            },
            "resourceSubnet": {
              "type": "object",
              "defaultValue": {
                "subnetName": "ResourceSubnet",
                "nsgName": "nsg-hub-resources",
                "subnetPrefix": "10.0.2.0/24"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-05-01",
              "name": "[parameters('hubNetwork').name]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('hubNetwork').addressPrefix]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('bastionHost').subnetName]",
                    "properties": {
                      "addressPrefix": "[parameters('bastionHost').subnetPrefix]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsgbastion')]"
                      }
                    }
                  },
                  {
                    "name": "[parameters('resourceSubnet').subnetName]",
                    "properties": {
                      "addressPrefix": "[parameters('resourceSubnet').subnetPrefix]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsgVirtualMachines')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsgbastion')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsgVirtualMachines')]"
              ]
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-06-01",
              "name": "bastionpip",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-06-01",
              "name": "nsgbastion",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "bastion-in-allow",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "Internet",
                      "destinationPortRange": "443",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "bastion-control-in-allow",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "GatewayManager",
                      "destinationPortRange": "443",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "bastion-in-host",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ],
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 130,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "bastion-vnet-out-allow",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationPortRanges": [
                        "22",
                        "3389"
                      ],
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "bastion-azure-out-allow",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationPortRange": "443",
                      "destinationAddressPrefix": "AzureCloud",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "bastion-out-host",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ],
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 130,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "bastion-out-deny",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Deny",
                      "priority": 1000,
                      "direction": "Outbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2020-06-01",
              "name": "bastionhost",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconf",
                    "properties": {
                      "subnet": {
                        "id": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name), parameters('bastionHost').subnetName)]"
                      },
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'bastionpip')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'bastionpip')]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-08-01",
              "name": "nsgVirtualMachines",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "bastion-in-vnet",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "[parameters('bastionHost').subnetPrefix]",
                      "destinationPortRanges": [
                        "22",
                        "3389"
                      ],
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "DenyAllInBound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationPortRange": "443",
                      "destinationAddressPrefix": "*",
                      "access": "Deny",
                      "priority": 1000,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "resourceSubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name), parameters('resourceSubnet').subnetName)]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-moc-factory', parameters('resourceGroupNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "configs",
      "resourceGroup": "[format('{0}-automation-central', parameters('resourceGroupNamePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "automationAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'automationCentral'), '2019-10-01').outputs.automationAccountName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "8192049623230101443"
            }
          },
          "parameters": {
            "automationAccountName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "hypervConfiguration": {
              "type": "object",
              "defaultValue": {
                "name": "hyperv",
                "description": "A configuration for installing Hyper-V.",
                "script": "https://raw.githubusercontent.com/neilpeterson/hyperv-iaas-dsc/main/config/hyperv.ps1"
              }
            },
            "addcConfiguration": {
              "type": "object",
              "defaultValue": {
                "name": "addc",
                "description": "A configuration for installing AADC.",
                "script": "https://raw.githubusercontent.com/neilpeterson/hyperv-iaas-dsc/main/config/addc.ps1"
              }
            },
            "iisConfiguration": {
              "type": "object",
              "defaultValue": {
                "name": "iis",
                "description": "A configuration for installing IIS.",
                "script": "https://raw.githubusercontent.com/neilpeterson/hyperv-iaas-dsc/main/config/iis.ps1"
              }
            },
            "rodcConfiguration": {
              "type": "object",
              "defaultValue": {
                "name": "rodc",
                "description": "A configuration for installing a read only domain controller.",
                "script": "https://raw.githubusercontent.com/neilpeterson/hyperv-iaas-dsc/main/config/rodc.ps1"
              }
            },
            "memberConfiguration": {
              "type": "object",
              "defaultValue": {
                "name": "member",
                "description": "A configuration for installing a member server.",
                "script": "https://raw.githubusercontent.com/neilpeterson/hyperv-iaas-dsc/main/config/member.ps1"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Automation/automationAccounts/configurations",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('addcConfiguration').name)]",
              "location": "[parameters('location')]",
              "properties": {
                "logVerbose": false,
                "description": "[parameters('addcConfiguration').description]",
                "source": {
                  "type": "uri",
                  "value": "[parameters('addcConfiguration').script]"
                }
              }
            },
            {
              "type": "Microsoft.Automation/automationAccounts/configurations",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('hypervConfiguration').name)]",
              "location": "[parameters('location')]",
              "properties": {
                "logVerbose": false,
                "description": "[parameters('hypervConfiguration').description]",
                "source": {
                  "type": "uri",
                  "value": "[parameters('hypervConfiguration').script]"
                }
              }
            },
            {
              "type": "Microsoft.Automation/automationAccounts/configurations",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('rodcConfiguration').name)]",
              "location": "[parameters('location')]",
              "properties": {
                "logVerbose": false,
                "description": "[parameters('rodcConfiguration').description]",
                "source": {
                  "type": "uri",
                  "value": "[parameters('rodcConfiguration').script]"
                }
              }
            },
            {
              "type": "Microsoft.Automation/automationAccounts/configurations",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('iisConfiguration').name)]",
              "location": "[parameters('location')]",
              "properties": {
                "logVerbose": false,
                "description": "[parameters('iisConfiguration').description]",
                "source": {
                  "type": "uri",
                  "value": "[parameters('iisConfiguration').script]"
                }
              }
            },
            {
              "type": "Microsoft.Automation/automationAccounts/configurations",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('memberConfiguration').name)]",
              "location": "[parameters('location')]",
              "properties": {
                "logVerbose": false,
                "description": "[parameters('memberConfiguration').description]",
                "source": {
                  "type": "uri",
                  "value": "[parameters('memberConfiguration').script]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'automationCentral')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-automation-central', parameters('resourceGroupNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "compile-addc",
      "resourceGroup": "[format('{0}-automation-central', parameters('resourceGroupNamePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "automationAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'automationCentral'), '2019-10-01').outputs.automationAccountName.value]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "4725204992315601625"
            }
          },
          "parameters": {
            "automationAccountName": {
              "type": "string"
            },
            "domainName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "addcConfiguration": {
              "type": "object",
              "defaultValue": {
                "name": "addc",
                "description": "A configuration for installing AADC.",
                "script": "https://raw.githubusercontent.com/neilpeterson/hyperv-iaas-dsc/main/config/addc.ps1"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Automation/automationAccounts/compilationjobs",
              "apiVersion": "2020-01-13-preview",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('addcConfiguration').name)]",
              "location": "[parameters('location')]",
              "properties": {
                "configuration": {
                  "name": "[parameters('addcConfiguration').name]"
                },
                "parameters": {
                  "ConfigurationData": "{\"AllNodes\":[{\"NodeName\":\"localhost\",\"PSDSCAllowPlainTextPassword\":true}]}",
                  "DomainName": "[parameters('domainName')]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'automationCentral')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-automation-central', parameters('resourceGroupNamePrefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'configs')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "addc",
      "resourceGroup": "[format('{0}-moc-factory', parameters('resourceGroupNamePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminUserName": {
            "value": "[parameters('adminUserName')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-moc-factory', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'network'), '2019-10-01').outputs.resourceSubnetId.value]"
          },
          "autoamtionAccountURL": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'automationCentral'), '2019-10-01').outputs.autoamtionAccountURL.value]"
          },
          "automationAccountKey": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'automationCentral'), '2019-10-01').outputs.automationAccountKey.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "5280011884493128632"
            }
          },
          "parameters": {
            "adminPassword": {
              "type": "secureString"
            },
            "adminUserName": {
              "type": "string"
            },
            "automationAccountKey": {
              "type": "string"
            },
            "autoamtionAccountURL": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "subnetId": {
              "type": "string"
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "Standard_D8s_v3"
            },
            "addcVirtualMachine": {
              "type": "object",
              "defaultValue": {
                "name": "vm-addc",
                "nicName": "nic-addc",
                "windowsOSVersion": "2022-datacenter",
                "diskName": "data"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-05-01",
              "name": "[parameters('addcVirtualMachine').nicName]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Compute/disks",
              "apiVersion": "2020-09-30",
              "name": "[parameters('addcVirtualMachine').diskName]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Premium_LRS"
              },
              "properties": {
                "creationData": {
                  "createOption": "Empty"
                },
                "diskSizeGB": 256,
                "diskIOPSReadWrite": 7500,
                "diskMBpsReadWrite": 250
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2019-07-01",
              "name": "[parameters('addcVirtualMachine').name]",
              "location": "[parameters('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[parameters('addcVirtualMachine').name]",
                  "adminUsername": "[parameters('adminUserName')]",
                  "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "[parameters('addcVirtualMachine').windowsOSVersion]",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage"
                  },
                  "dataDisks": [
                    {
                      "createOption": "Attach",
                      "lun": 1,
                      "managedDisk": {
                        "id": "[resourceId('Microsoft.Compute/disks', parameters('addcVirtualMachine').diskName)]"
                      }
                    }
                  ]
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('addcVirtualMachine').nicName)]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/disks', parameters('addcVirtualMachine').diskName)]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('addcVirtualMachine').nicName)]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2020-12-01",
              "name": "[format('{0}/{1}', parameters('addcVirtualMachine').name, 'Microsoft.Powershell.DSC')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.76",
                "protectedSettings": {
                  "Items": {
                    "registrationKeyPrivate": "[parameters('automationAccountKey')]"
                  }
                },
                "settings": {
                  "Properties": [
                    {
                      "Name": "RegistrationKey",
                      "Value": {
                        "UserName": "PLACEHOLDER_DONOTUSE",
                        "Password": "PrivateSettingsRef:registrationKeyPrivate"
                      },
                      "TypeName": "System.Management.Automation.PSCredential"
                    },
                    {
                      "Name": "RegistrationUrl",
                      "Value": "[parameters('autoamtionAccountURL')]",
                      "TypeName": "System.String"
                    },
                    {
                      "Name": "NodeConfigurationName",
                      "Value": "addc.localhost",
                      "TypeName": "System.String"
                    },
                    {
                      "Name": "ConfigurationMode",
                      "Value": "ApplyAndAutoCorrect",
                      "TypeName": "System.String"
                    },
                    {
                      "Name": "ConfigurationModeFrequencyMins",
                      "Value": 15,
                      "TypeName": "System.Int32"
                    },
                    {
                      "Name": "RefreshFrequencyMins",
                      "Value": 30,
                      "TypeName": "System.Int32"
                    },
                    {
                      "Name": "RebootNodeIfNeeded",
                      "Value": true,
                      "TypeName": "System.Boolean"
                    },
                    {
                      "Name": "ActionAfterReboot",
                      "Value": "ContinueConfiguration",
                      "TypeName": "System.String"
                    },
                    {
                      "Name": "AllowModuleOverwrite",
                      "Value": false,
                      "TypeName": "System.Boolean"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('addcVirtualMachine').name)]"
              ]
            }
          ],
          "outputs": {
            "privateIP": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('addcVirtualMachine').nicName)).ipConfigurations[0].properties.privateIPAddress]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'automationCentral')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'compile-addc')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'configs')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-moc-factory', parameters('resourceGroupNamePrefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-moc-factory', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "compile-hyperv",
      "resourceGroup": "[format('{0}-automation-central', parameters('resourceGroupNamePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "automationAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'automationCentral'), '2019-10-01').outputs.automationAccountName.value]"
          },
          "dnsServer": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-moc-factory', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'addc'), '2019-10-01').outputs.privateIP.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "13738564326784793357"
            }
          },
          "parameters": {
            "automationAccountName": {
              "type": "string"
            },
            "dnsServer": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "hypervConfiguration": {
              "type": "object",
              "defaultValue": {
                "name": "hyperv",
                "description": "A configuration for installing Hyper-V.",
                "script": "https://raw.githubusercontent.com/neilpeterson/hyperv-iaas-dsc/main/config/hyperv.ps1"
              }
            },
            "rodcConfiguration": {
              "type": "object",
              "defaultValue": {
                "name": "rodc",
                "description": "A configuration for installing a read only domain controller.",
                "script": "https://raw.githubusercontent.com/neilpeterson/hyperv-iaas-dsc/main/config/rodc.ps1"
              }
            },
            "iisConfiguration": {
              "type": "object",
              "defaultValue": {
                "name": "iis",
                "description": "A configuration for installing IIS.",
                "script": "https://raw.githubusercontent.com/neilpeterson/hyperv-iaas-dsc/main/config/iis.ps1"
              }
            },
            "memberConfiguration": {
              "type": "object",
              "defaultValue": {
                "name": "member",
                "description": "A configuration for installing a member server.",
                "script": "https://raw.githubusercontent.com/neilpeterson/hyperv-iaas-dsc/main/config/member.ps1"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Automation/automationAccounts/compilationjobs",
              "apiVersion": "2020-01-13-preview",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('hypervConfiguration').name)]",
              "location": "[parameters('location')]",
              "properties": {
                "incrementNodeConfigurationBuild": false,
                "configuration": {
                  "name": "[parameters('hypervConfiguration').name]"
                },
                "parameters": {
                  "ConfigurationData": "{\"AllNodes\":[{\"NodeName\":\"localhost\",\"PSDSCAllowPlainTextPassword\":true}]}",
                  "DomainName": "contoso.com",
                  "DNSAddress": "[parameters('dnsServer')]",
                  "ComputerName": "hyperv"
                }
              }
            },
            {
              "type": "Microsoft.Automation/automationAccounts/compilationjobs",
              "apiVersion": "2020-01-13-preview",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('rodcConfiguration').name)]",
              "location": "[parameters('location')]",
              "properties": {
                "configuration": {
                  "name": "[parameters('rodcConfiguration').name]"
                },
                "parameters": {
                  "ConfigurationData": "{\"AllNodes\":[{\"NodeName\":\"localhost\",\"PSDSCAllowPlainTextPassword\":true}]}",
                  "DomainName": "contoso.com",
                  "DNSAddress": "[parameters('dnsServer')]"
                }
              }
            },
            {
              "type": "Microsoft.Automation/automationAccounts/compilationjobs",
              "apiVersion": "2020-01-13-preview",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('iisConfiguration').name)]",
              "location": "[parameters('location')]",
              "properties": {
                "incrementNodeConfigurationBuild": false,
                "configuration": {
                  "name": "[parameters('iisConfiguration').name]"
                },
                "parameters": {
                  "ConfigurationData": "{\"AllNodes\":[{\"NodeName\":\"localhost\",\"PSDSCAllowPlainTextPassword\":true}]}",
                  "DomainName": "contoso.com",
                  "DNSAddress": "[parameters('dnsServer')]"
                }
              }
            },
            {
              "type": "Microsoft.Automation/automationAccounts/compilationjobs",
              "apiVersion": "2020-01-13-preview",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('memberConfiguration').name)]",
              "location": "[parameters('location')]",
              "properties": {
                "incrementNodeConfigurationBuild": false,
                "configuration": {
                  "name": "[parameters('memberConfiguration').name]"
                },
                "parameters": {
                  "ConfigurationData": "{\"AllNodes\":[{\"NodeName\":\"localhost\",\"PSDSCAllowPlainTextPassword\":true}]}",
                  "DomainName": "contoso.com",
                  "DNSAddress": "[parameters('dnsServer')]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-moc-factory', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'addc')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'automationCentral')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-automation-central', parameters('resourceGroupNamePrefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'configs')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "hyperv",
      "resourceGroup": "[format('{0}-moc-factory', parameters('resourceGroupNamePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminUserName": {
            "value": "[parameters('adminUserName')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-moc-factory', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'network'), '2019-10-01').outputs.resourceSubnetId.value]"
          },
          "autoamtionAccountURL": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'automationCentral'), '2019-10-01').outputs.autoamtionAccountURL.value]"
          },
          "automationAccountKey": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'automationCentral'), '2019-10-01').outputs.automationAccountKey.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "11279060787192333393"
            }
          },
          "parameters": {
            "adminPassword": {
              "type": "secureString"
            },
            "adminUserName": {
              "type": "string"
            },
            "automationAccountKey": {
              "type": "string"
            },
            "autoamtionAccountURL": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "sharedManagedDisk": {
              "type": "string",
              "defaultValue": "/subscriptions/3762d87c-ddb8-425f-b2fc-29e5e859edaf/resourceGroups/AUTOMATION-CENTRAL-POC/providers/Microsoft.Compute/disks/generalized-dsc-vhd"
            },
            "subnetId": {
              "type": "string"
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "Standard_D8s_v3"
            },
            "hypervVirtualMachine": {
              "type": "object",
              "defaultValue": {
                "name": "vm-hyperv",
                "nicName": "nic-hyperv",
                "windowsOSVersion": "2022-datacenter",
                "diskName": "addc-data"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-05-01",
              "name": "[parameters('hypervVirtualMachine').nicName]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Compute/disks",
              "apiVersion": "2020-09-30",
              "name": "[parameters('hypervVirtualMachine').diskName]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Premium_LRS"
              },
              "properties": {
                "creationData": {
                  "createOption": "Empty"
                },
                "diskSizeGB": 256,
                "diskIOPSReadWrite": 7500,
                "diskMBpsReadWrite": 250
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2019-07-01",
              "name": "[parameters('hypervVirtualMachine').name]",
              "location": "[parameters('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[parameters('hypervVirtualMachine').name]",
                  "adminUsername": "[parameters('adminUserName')]",
                  "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "[parameters('hypervVirtualMachine').windowsOSVersion]",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage"
                  },
                  "dataDisks": [
                    {
                      "createOption": "Attach",
                      "lun": 1,
                      "managedDisk": {
                        "id": "[resourceId('Microsoft.Compute/disks', parameters('hypervVirtualMachine').diskName)]"
                      }
                    },
                    {
                      "createOption": "Attach",
                      "lun": 2,
                      "managedDisk": {
                        "id": "[parameters('sharedManagedDisk')]"
                      }
                    }
                  ]
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('hypervVirtualMachine').nicName)]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/disks', parameters('hypervVirtualMachine').diskName)]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('hypervVirtualMachine').nicName)]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2020-12-01",
              "name": "[format('{0}/{1}', parameters('hypervVirtualMachine').name, 'Microsoft.Powershell.DSC')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.76",
                "protectedSettings": {
                  "Items": {
                    "registrationKeyPrivate": "[parameters('automationAccountKey')]"
                  }
                },
                "settings": {
                  "Properties": [
                    {
                      "Name": "RegistrationKey",
                      "Value": {
                        "UserName": "PLACEHOLDER_DONOTUSE",
                        "Password": "PrivateSettingsRef:registrationKeyPrivate"
                      },
                      "TypeName": "System.Management.Automation.PSCredential"
                    },
                    {
                      "Name": "RegistrationUrl",
                      "Value": "[parameters('autoamtionAccountURL')]",
                      "TypeName": "System.String"
                    },
                    {
                      "Name": "NodeConfigurationName",
                      "Value": "hyperv.localhost",
                      "TypeName": "System.String"
                    },
                    {
                      "Name": "ConfigurationMode",
                      "Value": "ApplyAndAutoCorrect",
                      "TypeName": "System.String"
                    },
                    {
                      "Name": "ConfigurationModeFrequencyMins",
                      "Value": 15,
                      "TypeName": "System.Int32"
                    },
                    {
                      "Name": "RefreshFrequencyMins",
                      "Value": 30,
                      "TypeName": "System.Int32"
                    },
                    {
                      "Name": "RebootNodeIfNeeded",
                      "Value": true,
                      "TypeName": "System.Boolean"
                    },
                    {
                      "Name": "ActionAfterReboot",
                      "Value": "ContinueConfiguration",
                      "TypeName": "System.String"
                    },
                    {
                      "Name": "AllowModuleOverwrite",
                      "Value": false,
                      "TypeName": "System.Boolean"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('hypervVirtualMachine').name)]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'automationCentral')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'compile-hyperv')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-automation-central', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'configs')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-moc-factory', parameters('resourceGroupNamePrefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-moc-factory', parameters('resourceGroupNamePrefix'))), 'Microsoft.Resources/deployments', 'network')]"
      ]
    }
  ]
}